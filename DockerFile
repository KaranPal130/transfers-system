FROM golang:1.18-alpine AS build

WORKDIR /app

# Copy go.mod and go.sum first to leverage Docker cache
COPY go.mod go.sum ./
RUN go mod download

# Copy the rest of the files
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -o /transfers-system ./cmd/server

# Use a minimal alpine image for the final container
FROM alpine:3.17

WORKDIR /

# Copy the binary from the build stage
COPY --from=build /transfers-system /transfers-system

# Expose port 8080
EXPOSE 8080

# Run the binary
CMD ["/transfers-system"]